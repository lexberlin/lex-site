---
import { type CollectionEntry, getEntries } from "astro:content";
import { Image } from "astro:assets";

// utils
import { slugify, formatDate, humanize } from "@js/textUtils";
import { getLocaleFromUrl } from "@js/localeUtils";

interface Props {
	post: CollectionEntry<"blog">;
	showDescription?: boolean;
	class?: string;
	rest?: any; // catch-all for any additional parameters, such as "aria-label"
}

const { post, showDescription = false, class: className, ...rest } = Astro.props as Props;
const { title, description, categories, pubDate, heroImage } = post.data;

const currLocale = getLocaleFromUrl(Astro.url);
---

<!-- href={`/blog/${post.id}/`} -->
<article class=`grid gap-4 md:grid-cols-2 md:gap-8 ${className}` {...rest}>
	<a
		href={`/blog/${post.id}/`}
		class="shrink-0 justify-center overflow-hidden rounded-lg sm:justify-normal"
	>
		<figure>
			<Image
				src={heroImage}
				alt={`Cover for ${title}`}
				height={700}
				quality="high"
				class="h-auto max-h-96 w-full rounded-lg object-cover transition-all duration-500 hover:scale-[1.02]"
			/>
		</figure>
	</a>
	<div class="flex w-full flex-col gap-2 md:gap-4">

		<!-- title -->
		<div>
			<a
				href={`/blog/${post.id}/`}
				class="hover:border-golden-500 border-b-2 border-transparent transition duration-300"
			>
				<h2 class="inline text-lg font-medium md:text-2xl lg:text-3xl text-golden-800">
					{title}
				</h2>
			</a>
		</div>

		<!-- description -->
		{
			showDescription && (
				<p class="description hidden md:block lg:text-lg">{description}</p>
			)
		}

		<div class="flex flex-wrap gap-1 text-sm opacity-80">
			<!-- published date -->
			<p class="whitespace-nowrap">
				{formatDate(pubDate, currLocale)}
			</p>
			<span>&bull;</span>
		</div>
	</div>
</article>
